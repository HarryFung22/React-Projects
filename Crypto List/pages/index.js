import Head from 'next/head'
import Image from 'next/image'
import {useEffect, useState} from 'react'
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';

export default function Home() {
  //set state for fetched data from API
  const [data, setData] = useState([]);
  //defined to set state of element user wants to search for
  const [search, setSearch] = useState('');
  //run inside useEffect, refresh dependencies everytime limit button is clicked
  const [onPage, setOnPage] = useState(10)

  useEffect(() => {
     const getCrypto = async() => {
      const res =  await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=market_cap_desc&per_page=${onPage}&page=1&sparkline=false'`)
      const data = await res.json()
      console.log(data)
      setData(data)
     }

     getCrypto()
     //passing onPage as a dependency array so function gets reran everytime dependency is changed
  }, [onPage]);

  //setting state for whatever user inputted
  const handleChange = e => {
    setSearch(e.target.value);
  };

  //filters coin map and updates to display coins according to the search state
  const searchCoin = data.filter(coin =>
    coin.name.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <>
      <Head>
        <title>CryptoLog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='h-screen w-screen'>
        <div>
          <h1 className='title'>CryptoLog</h1>
          <div className='buttons'>
            <Button className='' variant="contained" onClick={() => setOnPage(onPage + 10)}>View More</Button>
            <TextField id="outlined-basic" label="Search" variant="outlined" onChange={handleChange}></TextField>
            <Button variant="contained" onClick={() => setOnPage(10)}>Reset</Button>
          </div>
          <TableContainer component = {Paper}>
            <Table sx={{width: 1240, margin:'auto'}} aria-lable="simple table">
              <TableHead>
                <TableRow>
                  <TableCell>Coin</TableCell>
                  <TableCell align="center">Price (CAD)</TableCell>
                  <TableCell align="right">24Hr</TableCell>
                  <TableCell align="right">Market Cap</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {/*Map through data to get info from each coin*/}
                  {searchCoin.map(coin => (
                    <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>
                      <TableCell component="th" scope="row">
                        <img src={coin.image} alt = '/' style={{width: '13px', height: '13px'}}/> {coin.name} <span>({coin.symbol})</span>
                      </TableCell>
                      <TableCell align="center">${coin.current_price}</TableCell>
                      {coin.price_change_percentage_24h < 0 ? (
                         <TableCell className='red' align="right">{coin.price_change_percentage_24h}</TableCell>
                      ) : (
                        <TableCell className='green' align="right">{coin.price_change_percentage_24h}</TableCell>
                      )}
                      {coin.max_supply > 0 ? (
                         <TableCell align="right">${coin.max_supply}</TableCell>
                      ) : (
                        <TableCell align="right">{coin.max_supply}</TableCell>
                      )}
                    </TableRow>
                  ))}

              </TableBody>
            </Table>
          </TableContainer>
        </div>
      </main>
    </>
  )
}
